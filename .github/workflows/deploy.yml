name: Deploy to AWS EC2

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: admin
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/admin/database-lab4/lab4_for_bd

            # Оновлення коду
            git fetch origin
            git checkout main
            git pull origin main

            # Активуємо або створюємо віртуальне середовище
            python3 -m venv venv || true
            source venv/bin/activate

            # Встановлення залежностей
            pip install --upgrade pip
            pip install -r app/requirements.txt

            # Змінні середовища
            export USE_MYSQL=true

            # Створюємо скрипт який виконається ПІСЛЯ закриття SSH
            cat > restart_after_ssh.sh << 'EOF'
            #!/bin/bash
            sleep 2
            cd /home/admin/database-lab4/lab4_for_bd
            
            # Вбиваємо старі процеси
            pkill -9 -f "run_production.py" || true
            pkill -9 -f "waitress" || true
            fuser -k -9 5000/tcp || true
            rm -f app.pid
            
            # Чекаємо поки порт звільниться
            sleep 3
            
            # Запускаємо новий сервер
            source venv/bin/activate
            export USE_MYSQL=true
            nohup python3 run_production.py > flask.log 2>&1 & echo $! > app.pid
            EOF
            
            chmod +x restart_after_ssh.sh
            
            # Запускаємо скрипт ПІСЛЯ виходу з SSH через at
            echo "bash /home/admin/database-lab4/lab4_for_bd/restart_after_ssh.sh" | at now + 1 minute 2>/dev/null || {
              # Якщо at не працює, використовуємо screen
              screen -dmS deploy_restart bash restart_after_ssh.sh || {
                # Якщо screen не працює, використовуємо nohup з disown
                (nohup bash restart_after_ssh.sh > /dev/null 2>&1 &) && disown
              }
            }
            
            echo "✅ Deployment script scheduled to run after SSH disconnect"
            echo "⏳ Server will restart in ~1 minute"

      - name: Health Check
        run: |
          echo "⏳ Waiting for server to restart (75 seconds)..."
          sleep 75
          
          echo "🔍 Checking if server is up..."
          response=$(curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.AWS_EC2_HOST }}:5000/health)
          if [ $response -eq 200 ]; then
            echo "✅ Application is running successfully!"
            echo "🌐 API Endpoint: http://${{ secrets.AWS_EC2_HOST }}:5000/candidates"
            echo "📚 Swagger UI: http://${{ secrets.AWS_EC2_HOST }}:5000/apidocs/"
          else
            echo "⚠️  Health check returned status code: $response"
            echo "Server might still be starting up, this is OK for CD"
            echo "🌐 Check manually: http://${{ secrets.AWS_EC2_HOST }}:5000/apidocs/"
          fi

      - name: Notify on success
        if: success()
        run: |
          echo "✅ Deployment successful!"
          echo "🎉 Application deployed to production"
          echo "📝 Swagger documentation: http://${{ secrets.AWS_EC2_HOST }}:5000/apidocs/"

      - name: Notify on failure
        if: failure()
        run: echo "❌ Deployment failed! Check logs for details"
