name: Deploy to AWS EC2

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: admin
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/admin/database-lab4/lab4_for_bd

            # Оновлення коду
            git fetch origin
            git checkout main
            git pull origin main

            # Активуємо або створюємо віртуальне середовище
            python3 -m venv venv || true
            source venv/bin/activate

            # Встановлення залежностей
            pip install --upgrade pip
            pip install -r app/requirements.txt

            # Змінні середовища
            export USE_MYSQL=true

            # 🔍 Створюємо deploy скрипт на сервері
            cat > deploy_restart.sh << 'DEPLOY_SCRIPT'
            #!/bin/bash
            set -e
            
            echo "🔍 Stopping old processes..."
            
            # M'яко зупиняємо старі процеси
            if [ -f app.pid ]; then
              OLD_PID=$(cat app.pid 2>/dev/null || echo "")
              if [ -n "$OLD_PID" ] && kill -0 $OLD_PID 2>/dev/null; then
                echo "Stopping old process $OLD_PID gracefully..."
                kill -TERM $OLD_PID 2>/dev/null || true
                sleep 3
              fi
            fi
            
            # Якщо процес все ще живий, вбиваємо примусово
            pkill -9 -f "run_production.py" 2>/dev/null || true
            pkill -9 -f "waitress" 2>/dev/null || true
            
            # Звільняємо порт
            fuser -k 5000/tcp 2>/dev/null || true
            sleep 2
            
            # Видаляємо старий PID файл
            rm -f app.pid
            
            echo "✅ Old processes stopped"
            
            # Активуємо venv та запускаємо сервер
            source venv/bin/activate
            export USE_MYSQL=true
            
            echo "🚀 Starting new server..."
            nohup python3 run_production.py > flask.log 2>&1 & echo $! > app.pid
            
            sleep 5
            
            NEW_PID=$(cat app.pid)
            if kill -0 $NEW_PID 2>/dev/null; then
              echo "✅ Server started successfully with PID $NEW_PID"
            else
              echo "❌ Failed to start server"
              tail -20 flask.log
              exit 1
            fi
            DEPLOY_SCRIPT
            
            chmod +x deploy_restart.sh
            
            # Запускаємо deploy скрипт через nohup та setsid для повної ізоляції
            echo "Starting deployment in background..."
            setsid nohup bash deploy_restart.sh > deploy.log 2>&1 &
            
            echo "Waiting for deployment to complete..."
            sleep 12
            
            # Перевіряємо результат
            if [ -f app.pid ] && kill -0 $(cat app.pid) 2>/dev/null; then
              echo "✅ Deployment successful!"
              cat deploy.log | tail -20
            else
              echo "❌ Deployment may have issues, checking logs..."
              cat deploy.log | tail -30
            fi

      - name: Health Check
        run: |
          sleep 5
          response=$(curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.AWS_EC2_HOST }}:5000/health)
          if [ $response -eq 200 ]; then
            echo "✅ Application is running successfully!"
            echo "🌐 API Endpoint: http://${{ secrets.AWS_EC2_HOST }}:5000/candidates"
            echo "📚 Swagger UI: http://${{ secrets.AWS_EC2_HOST }}:5000/apidocs/"
          else
            echo "❌ Health check failed with status code: $response"
            tail -50 /home/admin/database-lab4/lab4_for_bd/flask.log || true
            exit 1
          fi

      - name: Notify on success
        if: success()
        run: |
          echo "✅ Deployment successful!"
          echo "🎉 Application deployed to production"
          echo "📝 Swagger documentation: http://${{ secrets.AWS_EC2_HOST }}:5000/apidocs/"

      - name: Notify on failure
        if: failure()
        run: echo "❌ Deployment failed! Check logs for details"
